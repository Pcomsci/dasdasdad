"use client";

import React, { useState, ChangeEvent, FormEvent } from "react";

// ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
type Student = {
  id: number;
  firstName: string;
  lastName: string;
  phone: string;
  email: string;
  status: boolean;
  classYear: string;  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏¥‡∏•‡∏î‡πå classYear
  room: string;  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏¥‡∏•‡∏î‡πå room
  note: string; // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó Student
};

const StudentListPage = () => {
  // üìå State ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
  const [students, setStudents] = useState<Student[]>([
    { id: 1, firstName: "‡∏™‡∏°‡∏ä‡∏≤‡∏¢", lastName: "‡πÉ‡∏à‡∏î‡∏µ", phone: "0812345678", email: "somchai@example.com", status: true, classYear: "year1", room: "room1",note: "‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏î‡∏µ" },
    { id: 2, firstName: "‡∏™‡∏°‡∏®‡∏£‡∏µ", lastName: "‡πÉ‡∏à‡∏Å‡∏ß‡πâ‡∏≤‡∏á", phone: "0812345679", email: "somsri@example.com", status: false, classYear: "year2", room: "room2",note: "‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏î‡∏µ‡∏°‡∏≤‡∏Å" },
  ]);

  // üìå ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô (‡πÉ‡∏ä‡πâ Student type ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÉ‡∏´‡∏°‡πà)
  const [formData, setFormData] = useState<Student>({
    id: -1, // ‡πÉ‡∏ä‡πâ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    firstName: "",
    lastName: "",
    phone: "",
    email: "",
    status: false,
    classYear: "",  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    room: "", // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    note: "", // ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏
  });

  const [isEditing, setIsEditing] = useState(false);
  const [showStudentList, setShowStudentList] = useState(true); // ‡∏™‡∏•‡∏±‡∏ö‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤ list ‡πÅ‡∏•‡∏∞ form

  // üìå ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°
  const handleInputChange = (e: ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
    const { name, value, type, } = e.target;
  
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô input ‡∏ä‡∏ô‡∏¥‡∏î checkbox ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (type === "checkbox") {
      setFormData({
        ...formData,
        [name]: (e.target as HTMLInputElement).checked, // cast ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô HTMLInputElement
      });
    } else {
      setFormData({
        ...formData,
        [name]: value, // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö input ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡πÉ‡∏ä‡πâ value
      });
    }
  };
  
  

  // üìå ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
  const handleSubmit = (e: FormEvent) => {
    e.preventDefault();
  
    if (isEditing) {
      // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
      setStudents((prevStudents) =>
        prevStudents.map((student) =>
          student.id === formData.id ? { ...formData, note: formData.note || "" } : student
        )
      );
    } else {
      // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÉ‡∏´‡∏°‡πà
      const newStudent = { ...formData, id: Date.now(), note: formData.note || "" }; // ‡πÄ‡∏û‡∏¥‡πà‡∏° note
      setStudents((prevStudents) => [...prevStudents, newStudent]);
    }

    
    setIsEditing(false);
    setShowStudentList(true); // ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
  };

  // üìå ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
  const handleEdit = (student: Student) => {
    setFormData(student);
    setIsEditing(true);
    setShowStudentList(false); // ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  };

  // üìå ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
  const handleDelete = (id: number) => {
    setStudents((prevStudents) => prevStudents.filter((student) => student.id !== id));
  };

  return (
    <div className="min-h-screen bg-gray-100 flex">
      {/* ‡πÄ‡∏°‡∏ô‡∏π Sidebar */}
      <aside className="w-1/4 bg-blue-900 text-white p-6 flex flex-col items-center space-y-6">
        {/* ‡πÇ‡∏•‡πÇ‡∏Å‡πâ */}
        <img 
          src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRSxRrTlrGYXiOBTxS82oN2RTjgbfiLy9jLkQ&s" 
          alt="School Logo" 
          className="h-32 w-32 object-cover rounded-full" 
        />

        {/* ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ */}
        <h1 className="text-xl font-bold">‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h1>

        {/* ‡πÄ‡∏°‡∏ô‡∏π */}
        <ul className="w-full space-y-4">
          <li>
            <button 
              onClick={() => setShowStudentList(true)} 
              className="text-lg font-semibold underline w-full text-center"
            >
              ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
            </button>
          </li>
        </ul>
      </aside>

      <main className="flex-1 p-10 bg-white shadow-md rounded-md">
        {showStudentList ? (
          <>
            {/* üìÑ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô */}
            <h1 className="text-2xl font-bold mb-6">‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</h1>
            <button 
              onClick={() => setShowStudentList(false)} 
              className="text-white px-6 py-2 bg-yellow-500 rounded-md hover:bg-yellow-300 mb-4"
            >
              ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
            </button>

            <table className="w-full border-collapse border border-gray-300">
              <thead>
                <tr className="bg-gray-200">
                  <th className="border p-2">‡∏•‡∏≥‡∏î‡∏±‡∏ö</th>
                  <th className="border p-2">‡∏ä‡∏∑‡πà‡∏≠</th>
                  <th className="border p-2">‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</th>
                  <th className="border p-2">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå</th>
                  <th className="border p-2">‡∏≠‡∏µ‡πÄ‡∏°‡∏•</th>
                  <th className="border p-2">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
                  
                  <th className="border p-2">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
                </tr>
              </thead>
              <tbody>
                {students.map((student, index) => (
                  <tr key={student.id}>
                    <td className="border p-2 text-center">{index + 1}</td>
                    <td className="border p-2">{student.firstName}</td>
                    <td className="border p-2">{student.lastName}</td>
                    <td className="border p-2">{student.phone}</td>
                    <td className="border p-2">{student.email}</td>
                    <td className="border p-2 text-center">{student.status ? "‚úÖ" : "‚ùå"}</td>
                    <td className="border p-2">
                      <button 
                        onClick={() => handleEdit(student)} 
                        className="bg-yellow-300 px-4 py-1 rounded"
                      >
                        ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                      </button>
                      <button 
                        onClick={() => handleDelete(student.id)} 
                        className="bg-red-500 text-white px-4 py-1 rounded ml-2"
                      >
                        ‡∏•‡∏ö
                      </button>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </>
        ) : (
          <>
            {/* üìã ‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô */}
            <h1 className="text-2xl font-bold mb-6 underline text-blue-500">{isEditing ? "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô" : "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÉ‡∏´‡∏°‡πà"}</h1>
            <form onSubmit={handleSubmit} className="space-y-4">
              <h1 className="text-xl mb-2 text-gray-500">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô</h1>
              <input 
                type="text" 
                name="firstName" 
                value={formData.firstName} 
                onChange={handleInputChange} 
                placeholder="‡∏ä‡∏∑‡πà‡∏≠" 
                className="border p-2 rounded w-full" 
              />
              <input 
                type="text" 
                name="lastName" 
                value={formData.lastName} 
                onChange={handleInputChange} 
                placeholder="‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•" 
                className="border p-2 rounded w-full" 
              />
              <input 
                type="text" 
                name="phone" 
                value={formData.phone} 
                onChange={handleInputChange} 
                placeholder="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå" 
                className="border p-2 rounded w-full" 
              />
              <input 
                type="email" 
                name="email" 
                value={formData.email} 
                onChange={handleInputChange} 
                placeholder="‡∏≠‡∏µ‡πÄ‡∏°‡∏•" 
                className="border p-2 rounded w-full" 
              />

              <h1 className="text-xl mb-2 text-gray-500">‡∏ä‡∏±‡πâ‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</h1>
              <select
                name="classYear"
                value={formData.classYear}
                onChange={handleInputChange}
                className="border p-2 rounded w-full"
              >
                <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏±‡πâ‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</option>
                <option value="year1">‡∏°.1</option>
                <option value="year2">‡∏°.2</option>
                <option value="year3">‡∏°.3</option>
                <option value="year4">‡∏°.4</option>
                <option value="year5">‡∏°.5</option>
                <option value="year6">‡∏°.6</option>
              </select>

              <select
                name="room"
                value={formData.room}
                onChange={handleInputChange}
                className="border p-2 rounded w-full"
              >
                <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡πâ‡∏≠‡∏á</option>
                <option value="room1">1</option>
                <option value="room2">2</option>
                <option value="room3">3</option>
                <option value="room4">4</option>
                <option value="room5">5</option>
                <option value="room6">6</option>
                <option value="room7">7</option>
                <option value="room8">8</option>
                <option value="room9">9</option>
                <option value="room10">10</option>
                <option value="room11">11</option>
                <option value="room12">12 no.1</option>
              </select>
              
              <input 
  type="text" 
  name="note" 
  value={formData.note} 
  onChange={handleInputChange} 
  placeholder="‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏" 
  className="border p-2 rounded w-full text-left"
/>

              <div>
                <input 
                  type="checkbox" 
                  name="status" 
                  checked={formData.status} 
                  onChange={handleInputChange} 
                  className="mr-2" 
                />
                <label>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</label>
              </div>

              <button type="submit" className="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-200">
                {isEditing ? "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç" : "‡∏¢‡∏±‡∏ô‡∏¢‡∏∑‡∏ô"}
              </button>
              <button 
                onClick={() => setShowStudentList(true)} 
                className="bg-gray-500 text-white px-4 py-2 rounded ml-2"
              >
                ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
              </button>
            </form>
          </>
        )}
      </main>
    </div>
  );
};

export default StudentListPage;
